"use strict";var ApplicationConfiguration=function(){var applicationModuleName="xmen",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","textAngular"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("customers"),ApplicationConfiguration.registerModule("families"),ApplicationConfiguration.registerModule("regulations"),ApplicationConfiguration.registerModule("superheroes"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.alerts=[{icon:"glyphicon-user",color:"btn-success",total:"20,408",description:"TOTAL CUSTOMERS"},{icon:"glyphicon-calendar",color:"btn-primary",total:"8,382",description:"UPCOMING EVENTS"},{icon:"glyphicon-edit",color:"btn-success",total:"527",description:"NEW CUSTOMERS IN 24HRS"},{icon:"glyphicon-record",color:"btn-info",total:"85,000",description:"EMAILS SENT"},{icon:"glyphicon-eye-open",color:"btn-warning",total:"268",description:"FOLLOWS UPS REQUIRED"},{icon:"glyphicon-flag",color:"btn-danger",total:"348",description:"REFERRALS TO MODERATE"}]}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("customers").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Customers","customers","dropdown","/customers(/create)?"),Menus.addSubMenuItem("topbar","customers","List Customers","customers"),Menus.addSubMenuItem("topbar","customers","New Customer","customers/create")}]),angular.module("customers").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCustomers",{url:"/customers",templateUrl:"modules/customers/views/list-customers.client.view.html"}).state("createCustomer",{url:"/customers/create",templateUrl:"modules/customers/views/create-customer.client.view.html"}).state("viewCustomer",{url:"/customers/:customerId",templateUrl:"modules/customers/views/view-customer.client.view.html"}).state("editCustomer",{url:"/customers/:customerId/edit",templateUrl:"modules/customers/views/edit-customer.client.view.html"})}]);var customersApp=angular.module("customers");customersApp.controller("CustomersController",["$scope","$stateParams","Authentication","Customers","$modal","$log",function($scope,$stateParams,Authentication,Customers,$modal,$log){this.authentication=Authentication,this.customers=Customers.query(),this.modalUpdate=function(size,selectedCustomer){var modalInstance=$modal.open({templateUrl:"modules/customers/views/edit-customer.client.view.html",controller:["$scope","$modalInstance","customer",function($scope,$modalInstance,customer){$scope.customer=customer,$scope.ok=function(){$modalInstance.close($scope.customer)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}],size:size,resolve:{customer:function(){return selectedCustomer}}});modalInstance.result.then(function(selectedItem){$scope.selected=selectedItem},function(){$log.info("Modal dismissed at: "+new Date)})}}]),customersApp.controller("CustomersCreateController",["$scope","Customers",function($scope){$scope.authentication=Authentication}]),customersApp.controller("CustomersUpdateController",["$scope","Customers",function($scope){$scope.authentication=Authentication,this.update=function(updatedCustomer){var customer=updatedCustomer;customer.$update(function(){},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("customers").factory("Customers",["$resource",function($resource){return $resource("customers/:customerId",{customerId:"@_id"},{update:{method:"PUT"}})}]),angular.module("families").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Families","families","dropdown","/families(/create)?"),Menus.addSubMenuItem("topbar","families","List All Families","families"),Menus.addSubMenuItem("topbar","families","Create New Family","families/create")}]),angular.module("families").config(["$stateProvider",function($stateProvider){$stateProvider.state("listFamilies",{url:"/families",templateUrl:"modules/families/views/list-families.client.view.html"}).state("createFamily",{url:"/families/create",templateUrl:"modules/families/views/create-family.client.view.html"}).state("viewFamily",{url:"/families/:familyId",templateUrl:"modules/families/views/view-family.client.view.html"}).state("editFamily",{url:"/families/:familyId/edit",templateUrl:"modules/families/views/edit-family.client.view.html"})}]),angular.module("families").controller("FamiliesController",["$scope","$stateParams","$location","Authentication","Families",function($scope,$stateParams,$location,Authentication,Families){$scope.authentication=Authentication,$scope.create=function(){var family=new Families({name:this.name,address:this.address});family.$save(function(response){$location.path("families/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(family){if(family){family.$remove();for(var i in $scope.families)$scope.families[i]===family&&$scope.families.splice(i,1)}else $scope.family.$remove(function(){$location.path("families")})},$scope.update=function(){var family=$scope.family;family.$update(function(){$location.path("families/"+family._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.families=Families.query()},$scope.findOne=function(){$scope.family=Families.get({familyId:$stateParams.familyId})}}]),angular.module("families").factory("Families",["$resource",function($resource){return $resource("families/:familyId",{familyId:"@_id"},{update:{method:"PUT"}})}]),angular.module("regulations").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Regulations","regulations","dropdown","/regulations(/create)?"),Menus.addSubMenuItem("topbar","regulations","List Regulations","regulations"),Menus.addSubMenuItem("topbar","regulations","New Regulation","regulations/create")}]),angular.module("regulations").config(["$stateProvider",function($stateProvider){$stateProvider.state("listRegulations",{url:"/regulations",templateUrl:"modules/regulations/views/list-regulations.client.view.html"}).state("createRegulation",{url:"/regulations/create",templateUrl:"modules/regulations/views/create-regulation.client.view.html"}).state("viewRegulation",{url:"/regulations/:regulationId",templateUrl:"modules/regulations/views/view-regulation.client.view.html"}).state("editRegulation",{url:"/regulations/:regulationId/edit",templateUrl:"modules/regulations/views/edit-regulation.client.view.html"})}]),angular.module("regulations").controller("RegulationsController",["$scope","$stateParams","$location","Authentication","Regulations",function($scope,$stateParams,$location,Authentication,Regulations){$scope.authentication=Authentication,$scope.create=function(){var regulation=new Regulations({title:this.title,section:this.section,number:this.number,regText:this.regText});regulation.$save(function(response){$location.path("regulations/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(regulation){if(regulation){regulation.$remove();for(var i in $scope.regulations)$scope.regulations[i]===regulation&&$scope.regulations.splice(i,1)}else $scope.regulation.$remove(function(){$location.path("regulations")})},$scope.update=function(){var regulation=$scope.regulation;regulation.$update(function(){$location.path("regulations/"+regulation._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.regulations=Regulations.query()},$scope.findOne=function(){$scope.regulation=Regulations.get({regulationId:$stateParams.regulationId})}}]),angular.module("regulations").factory("Regulations",["$resource",function($resource){return $resource("regulations/:regulationId",{regulationId:"@_id"},{update:{method:"PUT"}})}]),angular.module("superheroes").config(["$stateProvider",function($stateProvider){$stateProvider.state("team",{url:"/team",templateUrl:"modules/superheroes/views/team.client.view.html"}).state("listSuperheroes",{url:"/superheroes",templateUrl:"modules/superheroes/views/list-superheroes.client.view.html"}).state("createSuperhero",{url:"/superheroes/create",templateUrl:"modules/superheroes/views/create-superhero.client.view.html"}).state("viewSuperhero",{url:"/superheroes/:superheroId",templateUrl:"modules/superheroes/views/view-superhero.client.view.html"}).state("editSuperhero",{url:"/superheroes/:superheroId/edit",templateUrl:"modules/superheroes/views/edit-superhero.client.view.html"})}]),angular.module("superheroes").controller("SuperheroesController",["$scope","$stateParams","$location","Authentication","Superheroes",function($scope,$stateParams,$location,Authentication,Superheroes){$scope.authentication=Authentication,$scope.create=function(){var superhero=new Superheroes({name:this.name,superpower:this.superpower});superhero.$save(function(response){$location.path("superheroes/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(superhero){if(superhero){superhero.$remove();for(var i in $scope.superheroes)$scope.superheroes[i]===superhero&&$scope.superheroes.splice(i,1)}else $scope.superhero.$remove(function(){$location.path("superheroes")})},$scope.update=function(){var superhero=$scope.superhero;superhero.$update(function(){$location.path("superheroes/"+superhero._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.superheroes=Superheroes.query()},$scope.findOne=function(){$scope.superhero=Superheroes.get({superheroId:$stateParams.superheroId})}}]),angular.module("superheroes").controller("TeamController",["$scope",function($scope){var people=[{name:"David",address:"7 Redwood Park",phone:"07738079040"},{name:"Heather",address:"7 Redwood Park",phone:"07773189350"},{name:"Betty",address:"4 Glendon Park",phone:"02871343322"},{name:"Joe",address:"154 Abbeydale",phone:"01289615987"}];$scope.people=people}]),angular.module("superheroes").factory("Superheroes",["$resource",function($resource){return $resource("superheroes/:superheroId",{superheroId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);